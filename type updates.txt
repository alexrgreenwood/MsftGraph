#Ntew types to add

#        Microsoft.Graph.PowerShell.Models.MicrosoftGraphProfilePhoto        ??GraphPhoto  ??
#        Microsoft.Graph.PowerShell.Models.MicrosoftGraphOrganization        # GraphOrganization

  Other sign ins
  Justins bits
  directory         Undelete objcts     # Invoke-GraphRequest -Uri "$GraphUri/directory/deleteditems/microsoft.graph.user" -ValueOnly | foreach {Invoke-GraphRequest " https://graph.microsoft.com/beta/directory/deleteditems/$($_.id)/restore" -method post -body " "}
  directory         roles               # Invoke-GraphRequest  -Uri "$GraphUri/directoryroles" -all  /  Invoke-GraphRequest  -Uri "$GraphUri/directoryobjects/microsoft.graph.directoryrole" -all
  directory         roletemplates       # Invoke-GraphRequest  -Uri "$GraphUri/directoryroletemplates" -all
  directory         settings            # Invoke-GraphRequest  -Uri "https://graph.microsoft.com/beta/settings" -ValueOnly
  mail              delete              # DELETE /me/messages/{id}  DELETE /users/{id | userPrincipalName}/messages/{id} DELETE /me/mailFolders/{id}/messages/{id} DELETE /users/{id | userPrincipalName}/mailFolders/{id}/messag
  mail              move                # POST /me/messages/{id}/move
  onenote page      preview,
  onenote page      copy to section
  onenote-section   copy to notebook
  User              find meeting times ,
  User              export personal data,
  User              get transitive member-of
  user              change password     #   /users/{user-id}/microsoft.graph.changePassword':
  user              inbox rules        # Invoke-GraphRequest  -Uri  "$GraphUri/me/mailFolders/inbox/messagerules"
  user              outlook Categories # Invoke-GraphRequest  -Uri  "$GraphUri/me/outlook/mastercategories" -ValueOnly
    https://graph.microsoft.com/v1.0/me/messages('AAMkADA1M-zAAA=')/attachments('AAMkADA1M-CJKtzmnlcqVgqI=')/?$expand=microsoft.graph.itemattachment/item

  Group             get transitive member-of
  Group             get transitive members,
  Group             assign licence,
  group             setting templates   Invoke-GraphRequest  -Uri "https://graph.microsoft.com/v1.0/groupsettingTemplates" -all

  device           get                  invoke-GraphRequest  -Uri  "https://graph.microsoft.com/v1.0/devices" -ValueOnly | % {
                                                $_.remove('createdDatetime'),$_.remove('mdmappid'),$_.remove('sourceType'),$_.remove('externalSourceName')
                                                foreach ($k in $_.alternativeSecurityIds) {$k.key = [byte[]][char[]]$k.key }
                                                new-object -type Microsoft.Graph.PowerShell.Models.MicrosoftGraphDevice -Property $_
                                            }
    4 Excel.ps1
    9 ActionCard.ps1
   21 Sharepoint.ps1


#https://docs.microsoft.com/en-us/graph/api/resources/call?view=graph-rest-beta  calls in teams
#https://docs.microsoft.com/en-us/graph/api/resources/onlinemeeting?view=graph-rest-beta  on line meetings in teams

<#
 Others to explore

 (irm -Method Get -headers $Script:DefaultHeader -Uri "https://graph.microsoft.com/v1.0/devices").value | ft approximateLastSignInDateTime,displayName,operatingsystem,operatingsystemversion
 (irm -Method Get -headers $Script:DefaultHeader -Uri "https://graph.microsoft.com/v1.0/devices/c2221377-d362-42e7-8e16-e7d6abf80e61/registeredOwners").value
 (irm -Method Get -headers $Script:DefaultHeader -Uri "https://graph.microsoft.com/v1.0/devices/c2221377-d362-42e7-8e16-e7d6abf80e61/memberof").value
 (irm -Method Get -headers $Script:DefaultHeader -Uri "https://graph.microsoft.com/v1.0/me/owneddevices").value | ft displayname,operatingsystemversion,trusttype

  GET https://graph.microsoft.com/beta/me/findRooms                 #
  #>


<#
POST https://graph.microsoft.com/beta/me/messages/AAMkAGE1M88AADUv0uFAAA=/attachments
Content-type: application/json
Content-length: 319

{
    "@odata.type": "#microsoft.graph.referenceAttachment",
    "name": "Personal pictures",
    "sourceUrl": "https://contoso.com/personal/mario_contoso_net/Documents/Pics",
    "providerType": "oneDriveConsumer",
    "permission": "Edit",
    "isFolder": "True"
}
#>

